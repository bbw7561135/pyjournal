Starting:

  pyjournal.py init nickname path/

    this initializes a bare git repo that will hold the journal data
    it will also add to (or create) a .pyjournal file with an entry


  pyjournal.py connect git-path

    this will create a clone of a journal on a remote machine



file structure:

  journal-name/

    entries/
       date1/
       date2/


    journal.tex
    GNUmakefile



Day-to-day use:

  pyjournal.py [-n name] entry [XXX [YYY [ZZZ]]]
  
    adds an entry to the journal (optionally named "name") XXX, YYY,
    and ZZZ are optional names of images that will automatically be
    added as figures to the new entry


  pyjournal.py [-n name] show

    builds the journal and pops up evince 


  pyjournal.py [-n name] pull

     gets any changes from the remote git


  pyjournal.py [-n name] push



LaTeX structure:

   should be in book form with year as Chapter, month as section, day
   as subsection

   each entry is in a separate .tex file (yyyy-mm-dd-hh-mm-ss.tex) to
   avoid git sync issues (i.e. there should be no conflicts this way)
   
   the build process will create a master file for each day that has
   includes for each of the day's entries



 .pyjournal structure:

[nickname]
   remote = XXX    ; this is what we push to/pull from
   local = YYY     ; this is the local directory we interact with on our machine

